name: Build on Tag

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Set up QEMU (for cross-compilation)
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Bash and dependencies
        run: sudo apt-get update && sudo apt-get install -y build-essential

      - name: Run cross-platform build script
        run: |
          set -euo pipefail

          # List of target platforms
          PLATFORMS=(
            "linux/amd64" "linux/386" "linux/arm64" "linux/arm"
            "windows/amd64" "windows/386" "windows/arm64" "windows/arm"
            "darwin/amd64" "darwin/arm64"
          )
          OUTPUT_DIR="output"
          APP_NAME="making-mirrors"

          mkdir -p "$OUTPUT_DIR"

          map_arch() {
              case "$1" in
                  amd64) echo "x86_64" ;;
                  386) echo "x86" ;;
                  arm64) echo "arm64" ;;
                  arm) echo "arm32" ;;
                  *) echo "$1" ;;
              esac
          }

          for PLATFORM in "${PLATFORMS[@]}"; do
              IFS="/" read -r GOOS GOARCH <<< "$PLATFORM"
              EXT=""
              if [ "$GOOS" = "windows" ]; then
                  EXT=".exe"
              fi
              ARCH_NAME=$(map_arch "$GOARCH")
              OUTPUT_NAME="$OUTPUT_DIR/${APP_NAME}-${GOOS}-${ARCH_NAME}${EXT}"
              echo "Building for $GOOS/$GOARCH -> $OUTPUT_NAME"
              env GOOS="$GOOS" GOARCH="$GOARCH" go build -o "$OUTPUT_NAME" main.go
          done

          echo "Build complete. Binaries are in the '$OUTPUT_DIR' directory."

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: making-mirrors-binaries
          path: output/
