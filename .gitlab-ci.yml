image:
  name: golang:1.24.2-bookworm

variables:
  GIT_DEPTH: 0
  GIT_STRATEGY: clone
  GIT_SUBMODULE_STRATEGY: recursive
  HUGO_VERSION: 0.148.0
  DART_SASS_VERSION: 1.89.2
  TZ: America/Recife

stages:
  - build
  - compress
  - deploy

build_site:
  stage: build
  script:
    # Create local directory for dependencies
    - mkdir -p ./bin

    # Install Dart Sass
    - curl -LJO https://github.com/sass/dart-sass/releases/download/${DART_SASS_VERSION}/dart-sass-${DART_SASS_VERSION}-linux-x64.tar.gz
    - tar -xf dart-sass-${DART_SASS_VERSION}-linux-x64.tar.gz
    - cp -r dart-sass/* ./bin/
    - rm -rf dart-sass*

    # Install Hugo
    - curl -LJO https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb
    - dpkg-deb -x ./hugo_extended_${HUGO_VERSION}_linux-amd64.deb ./hugo_temp
    - cp ./hugo_temp/usr/local/bin/hugo ./bin/
    - rm -rf hugo_temp hugo_extended_${HUGO_VERSION}_linux-amd64.deb

    # Make binaries executable
    - chmod +x ./bin/*

    # Configure Git
    - git config core.quotepath false

    # Build
    - ./bin/hugo --gc --minify
  artifacts:
    paths:
      - public
    expire_in: 1 hour
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

compress_assets:
  stage: compress
  dependencies:
    - build_site
  script:
    # Update package registry
    - apt-get update

    # Install brotli for compression
    - apt-get install -y brotli

    # Compress with gzip
    - find public -type f -regex '.*\.\(css\|html\|js\|txt\|xml\)$' -exec gzip -f -k {} \;

    # Compress with brotli
    - find public -type f -regex '.*\.\(css\|html\|js\|txt\|xml\)$' -exec brotli -f -k {} \;
  artifacts:
    paths:
      - public
    expire_in: 1 hour
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

pages:
  stage: deploy
  dependencies:
    - compress_assets
  script:
    - echo "Deploying to GitLab Pages..."
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
